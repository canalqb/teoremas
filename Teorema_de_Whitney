# üìö - Teorema de Whitney

[![Python](https://img.shields.io/badge/Python-3.7%2B-blue.svg)](https://www.python.org/)
[![License](https://img.shields.io/badge/license-MIT-green)](LICENSE)
[![LGN](https://img.shields.io/badge/Teorema-Lei%20dos%20Grandes%20N√∫meros-ff69b4.svg)](https://en.wikipedia.org/wiki/Law_of_large_numbers)

## Frase do Teorema

> **"O Teorema de Whitney afirma que existe uma forma de representar uma fun√ß√£o cont√≠nua entre os pontos de uma variedade, com base em um n√∫mero espec√≠fico de par√¢metros."**
> **Descri√ß√£o simples**: O teorema de Whitney ajuda a entender como fun√ß√µes podem ser representadas de forma cont√≠nua dentro de um conjunto de pontos, usando uma quantidade m√≠nima de par√¢metros.

## Sum√°rio

* [1. Introdu√ß√£o ao Teorema](#1-introdu√ß√£o-ao-teorema)

  * [1.1 Resumo](#11-resumo)
  * [1.2 Exemplos Pr√°ticos](#12-exemplos-pr√°ticos)
  * [1.3 Explica√ß√£o Detalhada](#13-explica√ß√£o-detalhada)
  * [1.4 Aplica√ß√µes](#14-aplica√ß√µes)
  * [1.5 An√°lise da Tabela](#15-an√°lise-da-tabela)

* [2. Script `teorema_whitney.py`](#2-script-teorema_whitney.py)

  * [2.1 Rela√ß√£o com o Teorema](#21-rela√ß√£o-com-o-teorema)
  * [2.2 Objetivo do Script](#22-objetivo-do-script)
  * [2.3 Exemplo de Sa√≠da](#23-exemplo-de-sa√≠da)
  * [2.4 Funcionamento Interno](#24-funcionamento-interno)
  * [2.5 Tecnologias e Requisitos](#25-tecnologias-e-requisitos)

* [3. Extras](#3-extras)

  * [3.1 Licen√ßa](#31-licen√ßa)
  * [3.2 Refer√™ncias](#32-referencias)
  * [3.3 Testes e Valida√ß√µes](#33-testes-e-valida√ß√µes)

* [4. Contato](#4-contato)

* [5. Nota](#5-nota)

## 1. Introdu√ß√£o ao Teorema

### 1.1 Resumo

O Teorema de Whitney trata da possibilidade de representa√ß√£o cont√≠nua de fun√ß√µes entre pontos de um conjunto de dados, com um n√∫mero m√≠nimo de par√¢metros, visando construir uma descri√ß√£o cont√≠nua entre esses pontos.

### 1.2 Exemplos Pr√°ticos

Imagine que voc√™ tenha um conjunto de pontos espalhados ao longo de um gr√°fico, e quer conectar esses pontos de maneira cont√≠nua. O teorema de Whitney garante que √© poss√≠vel fazer isso com uma quantidade m√≠nima de par√¢metros, ajudando em √°reas como interpola√ß√£o e modelagem de dados.

### 1.3 Explica√ß√£o Detalhada

O Teorema de Whitney estabelece que existe uma fun√ß√£o cont√≠nua que pode ser representada de forma simples, sem que seja necess√°rio usar muitos par√¢metros para descrever a rela√ß√£o entre os pontos. Isso √© fundamental em problemas de aproxima√ß√£o e reconstru√ß√£o de fun√ß√µes a partir de dados discretos.

### 1.4 Aplica√ß√µes

Este teorema tem v√°rias aplica√ß√µes pr√°ticas, como em **modelagem de dados**, **interpola√ß√£o de fun√ß√µes**, e **reconstru√ß√£o de superf√≠cies** em computa√ß√£o gr√°fica, por exemplo.

### 1.5 An√°lise da Tabela

A tabela apresentada compara os valores de "Inicio" (2^N) e "Fim" (2^(N+1)-1), al√©m de estimar o valor esperado, que pode ser calculado com base na interpola√ß√£o entre esses dois valores. A f√≥rmula usada para calcular os valores esperados √© uma m√©dia simples entre "Inicio" e "Fim". Este processo ajuda a entender como os valores esperados se comportam em rela√ß√£o √† tabela fornecida.

## 2. Script `teorema_whitney.py`

### 2.1 Rela√ß√£o com o Teorema

O script `teorema_whitney.py` utiliza os conceitos do Teorema de Whitney para calcular os valores esperados em uma tabela com base nos par√¢metros dados. Ele segue a ideia de interpola√ß√£o entre os valores "Inicio" e "Fim", gerando os resultados esperados para um conjunto de dados.

### 2.2 Objetivo do Script

O objetivo do script √© calcular e gerar os valores esperados para cada entrada $N$, usando os valores de "Inicio" (2^N) e "Fim" (2^(N+1)-1). O script faz isso de maneira automatizada, permitindo a an√°lise de como esses valores evoluem para diferentes $N$.

### 2.3 Exemplo de Sa√≠da

Ao rodar o script, voc√™ obter√° uma tabela com os valores calculados de acordo com os par√¢metros fornecidos. Um exemplo de sa√≠da seria:

```plaintext
N  | Inicio (2^N) | Esperado pelo Teorema | Fim (2^(N+1))-1
0  | 1            | 1.0                  | 1
1  | 2            | 3.0                  | 3
2  | 4            | 7.0                  | 7
3  | 8            | 11.5                 | 15
4  | 16           | 26.0                 | 31
5  | 32           | 48.0                 | 63
6  | 64           | 100.5                | 127
7  | 128          | 189.0                | 255
8  | 256          | 361.5                | 511
9  | 512          | 763.5                | 1023
```

### 2.4 Funcionamento Interno

O script come√ßa com a tabela de dados fornecida e, para cada valor $N$, calcula o valor esperado como a m√©dia entre o "Inicio" e o "Fim". Em seguida, ele imprime a tabela gerada, onde voc√™ pode comparar os resultados.

### 2.5 Tecnologias e Requisitos

O script foi desenvolvido em Python, vers√£o **3.8.10**. Nenhuma biblioteca adicional √© necess√°ria, al√©m da biblioteca padr√£o do Python.

## 3. Extras

### 3.1 Licen√ßa

Este projeto est√° licenciado sob a **MIT License**. Consulte o arquivo LICENSE para mais detalhes.

### 3.2 Refer√™ncias

* [Teorema de Whitney - Wikipedia](https://en.wikipedia.org/wiki/Whitney_embedding_theorem)
* [Lei dos Grandes N√∫meros - Wikipedia](https://en.wikipedia.org/wiki/Law_of_large_numbers)

### 3.3 Testes e Valida√ß√µes

O script foi testado com uma variedade de entradas e produz os resultados esperados dentro dos intervalos fornecidos. N√£o h√° testes automatizados definidos, mas a sa√≠da pode ser verificada manualmente.

## 4. Contato

* Feito por CanalQb no GitHub
* Visite o blog: canalqb.blogspot.com \[[https://canalqb.blogspot.com](https://canalqb.blogspot.com)]
* üí∏ Apoie o projeto via Bitcoin: 13Ve1k5ivByaCQ5yer6GoV84wAtf3kNava
* PIX: [qrodrigob@gmail.com](mailto:qrodrigob@gmail.com)

*Readme.md corrigido por ChatGPT*

## 5. Nota

**Nota 1**: **Par√¢metros** ‚Äì S√£o as vari√°veis que podem ser ajustadas ou controladas para testar diferentes cen√°rios no c√°lculo ou na modelagem.

**Nota 2**: **Interpola√ß√£o** ‚Äì Processo de calcular valores intermedi√°rios entre dados conhecidos.

**Nota 3**: **Fun√ß√£o Cont√≠nua** ‚Äì Uma fun√ß√£o em que pequenas mudan√ßas na entrada resultam em pequenas mudan√ßas na sa√≠da. 
